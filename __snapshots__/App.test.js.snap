// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Functionality:  clears the expression after any next input when the result displays the error message 1`] = `
Object {
  "expression": "",
  "result": "",
}
`;

exports[`App Functionality:  does not update the expression if the last and next inputs are invalid  1`] = `
Object {
  "expression": "1+",
  "result": "",
}
`;

exports[`App Functionality:  does not update the expression if the last and next inputs are invalid  2`] = `
Object {
  "expression": "",
  "result": "",
}
`;

exports[`App Functionality:  removes the last input when CLEAR is pressed 1`] = `
Object {
  "expression": "1",
  "result": "1",
}
`;

exports[`App Functionality:  resets input when CLEAR is long pressed 1`] = `
Object {
  "expression": "",
  "result": "",
}
`;

exports[`App Functionality:  shows error message when invalid divisions are done 1`] = `
Object {
  "expression": "9รท0",
  "result": "Can't do this!",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  1`] = `
Object {
  "expression": "1",
  "result": "1",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  2`] = `
Object {
  "expression": "1+",
  "result": "1",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  3`] = `
Object {
  "expression": "1+5",
  "result": "6",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  4`] = `
Object {
  "expression": "1+5-",
  "result": "6",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  5`] = `
Object {
  "expression": "1+5-3",
  "result": "3",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  6`] = `
Object {
  "expression": "1+5-3x",
  "result": "3",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  7`] = `
Object {
  "expression": "1+5-3x6",
  "result": "-12",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  8`] = `
Object {
  "expression": "1+5-3x6รท",
  "result": "-12",
}
`;

exports[`App Functionality:  updates the expression and result by concatinating the expression when a valid input is pressed  9`] = `
Object {
  "expression": "1+5-3x6รท1",
  "result": "-12",
}
`;

exports[`App Functionality:  updates the expression by replacing the operator if the last input was an operator  1`] = `
Object {
  "expression": "1*",
  "result": "",
}
`;

exports[`App Functionality:  updates the expression to handle upto 5 decimals 1`] = `
Object {
  "expression": "9รท7",
  "result": "1.28571",
}
`;

exports[`App Functionality:  updates the expression with the result when EQUALS is pressed 1`] = `
Object {
  "expression": "4446",
  "result": "",
}
`;

exports[`App UI:  renders the Calculator 1`] = `
<ThemeProvider
  theme={
    Object {
      "COLORS": Object {
        "BLACK": "#1C1C1C",
        "DARK_GREY": "#474449",
        "LIGHT_GREY": "#E8EAEF",
        "LIGHT_PINK": "#FEDBDC",
        "PRIMARY_GREY": "#BCCOCE",
        "PRIMARY_PINK": "#EE2F5E",
        "WHITE": "#FFFFFF",
      },
      "FONT": Object {
        "SIZES": Object {
          "large": 60,
          "medium": 40,
          "normal": 25,
        },
        "WEIGHTS": Object {
          "bold": 700,
          "normal": 400,
          "semibold": 500,
        },
      },
      "LAYOUT": Object {
        "BUTTON_HEIGHT": 75,
        "BUTTON_WIDTH": 75,
        "GAP": 12,
        "GUTTER": 16,
        "TEXT_PADDING": 4,
      },
    }
  }
>
  <Styled(SafeAreaView)
    isAndroid={false}
  >
    <Styled(View)
      flex={1}
    >
      <Styled(Styled(View)) />
      <OutputContainer
        expression=""
        result=""
      />
      <InputButtonsContainer
        onButtonPress={[Function]}
        onLongPress={[Function]}
      />
    </Styled(View)>
  </Styled(SafeAreaView)>
</ThemeProvider>
`;
